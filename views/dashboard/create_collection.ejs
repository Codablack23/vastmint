<!DOCTYPE html>
<html lang="en">
<head>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-GLhlTQ8iRABdZLl6O3oVMWSktQOp6b7In1Zl3/Jr59b6EGGoI1aFkw7cmDA6j6gD" crossorigin="anonymous">
    <link rel="stylesheet" href="/css/w3css.css">
    <%- include('../partials/dashboard/head.ejs') %>
    <style>
      .input-field{
        margin-block: 1.2em;
      }
      .input-field label{
        display: block;
      }
      .file-input-field .label{
        border: 2px dotted black;
        border-radius: 10px;
        height: 300px;
        width:100%;
        max-width: 400px;
        cursor: pointer;
        display: flex;
        align-items: center;
        justify-content: center;
      }
      .file-input-field .label i{
          font-size: 70px;
      }
      .input-field input{
        border: none;
        outline: none;
        color: #fff;
      }
      .preview-container{
        max-width: 400px;
        margin:10px 0px;
        position: relative;
      }
      .loader-container{
        position: absolute;
        border-radius: 10px;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0,0,0,0.5);
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 6;
      }
      .preview-container .preview{
        border-radius: 10px;
        height: 300px;
        width:100%;
        max-width: 400px;
      }
      .preview img{
        height: 300px;
        width:100%;
        max-width: 400px;
        object-fit: cover;
        border-radius: 10px;
      }
      .hide{
        display: none;
      }
    </style>
</head>
<body>
  <main>
    <%- include('../partials/dashboard/sidebar.ejs') %>
    <section class="vastmint-dashboard-page">
    <%- include('../partials/header2.ejs') %>
    <div class="loader-container d-none" id="main-loader">
        <div class="d-flex justify-content-center">
           <div class="w3-center text-light">
             <div class="spinner-border text-light" role="status">
                <span class="visually-hidden">Loading...</span>
              </div>
              <p>Creating Collection</p>
           </div>
          </div>
    </div>
     <div class="p-4 vastmint-white w3-card w3-round-large">
        <header class="header d-flex align-items-center justify-content-between">
            <p class="title fs-4 fw-semibold">Create Collection</p>
            <p class="title fs-4 fw-semibold">Mint Fee <%= parseFloat(mint_fee) %>ETH</p>
        </header>
        <div class="alert alert-danger hide" id="file-err">
            <p class="error-message"></p>
        </div>
        <form action="" method="post" id="create-collection">
            <div class="file-input-field">
                <p class="fw-semibold">Collection Img*</p>
                <div class="preview-container hide" id="preview-container">
                    <div class="loader-container d-none" id="loader">
                        <div class="d-flex justify-content-center">
                            <div class="spinner-border" role="status">
                              <span class="visually-hidden">Loading...</span>
                            </div>
                          </div>
                    </div>
                    <div class="preview" id="preview">
                        <img src="" alt="">
                    </div>
                    <div class="d-flex align-items-center justify-content-between mt-2" id="preview-actions">
                        <label for="banner_img"  class="btn btn-light">Change Image</label>
                        <button type="button" class="btn btn-primary" id="upload-btn">Upload</button>
                      </div>
                </div>
                <div id="drop-zone">
                    <label for="banner_img" class="label" >
                        <div class="w3-center">
                            <i class="bi bi-image"></i>
                            <p>Click to upload your collection image</p>
                        </div>
                    </label>
                </div>
               
                <input type="file" name="banner_img" style="display: none;" id="banner_img">
            </div> 
            <div class="input-field">
                <label for="" class="fw-semibold">Collection Name*</label>
                <input 
                name="name" 
                class="vastmint-white-2 vastmint-w-100 w3-round" 
                type="text" 
                required
                >
            </div>
            <button class="btn vastmint-primary-400 vastmint-text-white">Create Collection</button>
        </form>
     </div>
    </section>
  </main>
</body>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js" integrity="sha384-w76AqPfDkMBDXo30jS1Sgez6pr3x5MlQ1ZAGC+nuZB+EYdgRZgiwxhTBTkF7CXvN" crossorigin="anonymous"></script>
<script>
    
    const useImgFile = ()=>{
        let file = null
        return [
        ()=>file,
        (imgFile)=>{file = imgFile}
        ]
    }
    const useImg = ()=>{
        let img = null
        return [
        ()=>img,
        (imgFile)=>{img = imgFile}
        ]
    }
    const [getImg,setImg] = useImg()
    const [getFile,setFile] = useImgFile()    
    
    const fileInput = document.querySelector("#banner_img")   
    const uploadBtn = document.querySelector("#upload-btn")   
    const form = document.querySelector("#create-collection")   
   // const fileInput = document.querySelector("#banner_img")
    //const fileInput = document.querySelector("#banner_img")
    fileInput.addEventListener("change",(e)=>{
        const dropZone = document.querySelector("#drop-zone")
        const preview = document.querySelector("#preview-container")
        const errEL= document.querySelector("#file-err")
        const img = preview.querySelector("img")
        // console.log(fileInput)
        const file = e.target.files[0]
        console.log(file)
        if(file.type.startsWith("image/")){
            errEL.classList.add("hide")
            setFile(file)
            const reader = new FileReader();
            img.file = file
            reader.onload = (e) => {
             img.src = e.target.result;
             preview.classList.remove("hide")
             img.classList.remove("d-none")
             dropZone.classList.add("hide")
            };
            reader.readAsDataURL(file);
    
        }else{
           errEL.classList.remove("hide")
           const errText = errEL.querySelector(".error-message")
           errText.innerHTML = "Please select a valid image"
        }
    })
    uploadBtn.addEventListener("click",async(e)=>{
        const loader= document.querySelector("#loader")
        const actions= document.querySelector("#preview-actions")
        const errEL= document.querySelector("#file-err")
    
        const file = getFile()
        const reqData = new FormData()
        reqData.append("file",file)
        reqData.append("user","data")
        try {
          loader.classList.remove("d-none")
          const balRes = await fetch("/api/wallet/check-balance/collection/",{
              method:"POST",
              body:reqData
          })
          const balData = await balRes.json()
          if(balData.status == "success"){
            const response = await fetch("/upload/",{
                method:"POST",
                body:reqData
            })
            const data = await response.json()
            loader.classList.add("d-none")

            if(data.status == "success"){
              setImg(data.img_url)
              errEL.classList.add("hide")
              actions.classList.add('d-none')
            }else{
                errEL.classList.remove("hide")
                const errText = errEL.querySelector(".error-message")
                errText.innerHTML = "could not upload due to some server issues please try again later"
            }
          }else{
              loader.classList.add("d-none")
              errEL.classList.remove("hide")
              const errText = errEL.querySelector(".error-message")
              errText.innerHTML = balData.err || balData.error
          }
           
        } catch (error) {
            console.log(error)
            loader.classList.add("d-none")
            errEL.classList.remove("hide")
            const errText = errEL.querySelector(".error-message")
            errText.innerHTML = "could not upload due to some server issues please try again later"
        }
    })
    form.addEventListener('submit',async(e)=>{
     const loader= document.querySelector("#main-loader")
     const errEL= document.querySelector("#file-err")

      e.preventDefault()
      const name = e.target["name"].value
      console.log(name)
      const banner_img = getImg()
      if(name){
      try{
        loader.classList.remove("d-none")
        const response = await fetch("/dashboard/collections/create",{
            method:"POST",
            headers: {
                'Content-Type':'application/json',
                'Accept':'application/json'
            },
            body:JSON.stringify({
                name,
                banner_img
            })
        })
        const payload = await response.json()
        loader.classList.add("d-none")
        if(payload.status == "success"){
            errEL.classList.remove("hide")
            errEL.classList.add("alert-success")
            errEL.classList.remove("alert-danger")
            const errText = errEL.querySelector(".error-message")
            errText.innerHTML = payload.message
            window.location.assign("/dashboard/collections")            

        }else{
            errEL.classList.remove("hide")
            const errText = errEL.querySelector(".error-message")
            errText.innerHTML = payload.error || payload.err
        }
      }catch(e){
       loader.classList.add("d-none")
       console.log(e)

      }
    }
    })
</script>
</html>