<!DOCTYPE html>
<html lang="en">
<head>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-GLhlTQ8iRABdZLl6O3oVMWSktQOp6b7In1Zl3/Jr59b6EGGoI1aFkw7cmDA6j6gD" crossorigin="anonymous">
    <link rel="stylesheet" href="/css/w3css.css">
    <%- include('../partials/dashboard/head.ejs') %>
    <style>
        .file-input-field .label{
            border: 2px dotted black;
            border-radius: 10px;
            height: 300px;
            width:100%;
            background-color: #eee;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            position: relative;
          }
          .file-input-field .label i{
              font-size: 70px;
          }
        .error-container{
            max-width: 500px;
            text-align:center;
            margin-inline:auto;
            padding:1em;
        }
        .preview-container .preview{
            border-radius: 10px;
            height: 300px;
            width:100%;
          }
          .preview img{
            height: 300px;
            width:100%;
            object-fit: cover;
            border-radius: 10px;
          }
          .hide{
            display: none;
          }
          .loader-container{
            position: absolute;
            border-radius: 10px;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0,0,0,0.5);
            display: flex;
            align-items: center;
            justify-content: center;
            z-index: 6;
          }
    </style>
</head>
<body>
  <main>
    <%- include('../partials/dashboard/sidebar.ejs') %>
    <section class="vastmint-dashboard-page">
    <div class="modal fade" id="staticBackdrop" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
            <div class="modal-header">
                <p class="modal-title fs-2" id="staticBackdropLabel"><p>Create and add NFT to Collection</p></p>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="alert alert-danger hide" id="file-err">
                    <p class="error-message"></p>
                </div>
                <form action="" id="add-attr-form">
                    <div>
                        <p class="mb-1"><b>NFT Name</b></p>
                        <input 
                        required
                        minlength="3"
                        name="name"
                        pattern="^[a-zA-Z]+(([',. -][a-zA-Z ])?[a-zA-Z]*)*$"
                        placeholder="Choose an NFT name"
                        class="w3-border vastmint-w-100 px-2 p-1 w3-border-light-grey w3-round" type="text" style="outline:none;">
                    </div><br>
                    <div>
                        <p class="mb-1"><b>NFT Description</b></p>
                        <input 
                        required
                        name="description"
                        minlength="3"
                        pattern="^[a-zA-Z]+(([',. -][a-zA-Z ])?[a-zA-Z]*)*$"
                        placeholder="Give a good description of your NFT"
                        class="w3-border vastmint-w-100 px-2 p-1 w3-border-light-grey w3-round" type="text" style="outline:none;">
                    </div><br> 
                    <div>
                        <p class="mb-1"><b>Floor Price</b></p>
                        <input 
                        required
                        name="price"
                        minlength="1"
                        pattern="\d+|(\d+[.]\d+)"
                        placeholder="Add a floor price for your NFT"
                        class="w3-border vastmint-w-100 px-2 p-1 w3-border-light-grey w3-round" type="text" style="outline:none;">
                    </div><br>
                    <div class="file-input-field">
                        <p class="mb-1"><b>NFT Image</b></p>
                        <div class="preview-container hide" id="preview-container">
                            <div class="loader-container d-none" id="loader">
                                <div class="d-flex justify-content-center">
                                    <div class="spinner-border" role="status">
                                      <span class="visually-hidden">Loading...</span>
                                    </div>
                                  </div>
                            </div>
                            <div class="preview" id="preview">
                                <img src="" alt="">
                            </div>
                            <div class="d-flex align-items-center justify-content-between mt-2" id="preview-actions">
                                <label for="banner_img"  class="btn btn-light">Change Image</label>
                                <button type="button" class="btn btn-primary" id="upload-btn">Upload</button>
                              </div>
                        </div>
                        <div id="drop-zone">
                            <label for="banner_img" class="label" >
                                <div class="w3-center">
                                    <i class="bi bi-image"></i>
                                    <p>Click to upload your collection image</p>
                                </div>
                            </label>
                        </div>
                    </div><br>
                   <input type="file" name="banner_img" style="display: none;" id="banner_img">

                    <div class="d-flex justify-content-end">
                    <button type="button" class="btn btn-danger" id="close-modal-btn" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary ms-2" >Create</button>
                    </div>

                </form>
            </div>
            </div>
        </div>
        </div>
    <%- include('../partials/header2.ejs') %>
    <%- include('../partials/dashboard/header.ejs') %>
    <% if (response.status === "failed") { %>
        <% if (response.status_code == 404) { %>
         <div class="error-container">
            <img src="/assets/404.svg" alt="page-not-found" style="max-width:380px;margin-bottom:0.5em">
                <h3 style="font-size: 24px;margin-bottom:0.5em;" class="fw-semibold">Collection Not Found</h3>
                <p><%= response.error %></p><br>
            <button 
            onclick="window.history.back()" 
            class="vastmint-primary-400 vastmint-text-white" 
            style="padding:10px 16px;border-radius:30px;border:none;cursor:pointer;">
            Go Back
        </button>
        </div>
        <% }else{ %> 
         <div class="w3-center p-3 mx-auto" style="max-width: 500px;">
            <img src="/assets/500.svg" alt="">
            <p class="fw-semibold mb-0" style="font-size: 30px;">Server Error</p>
            <p class="mb-0">Sorry could not get this content due some server error Please try again later while we sort this issue out</p><br>
            <button onclick="window.location.reload()" href="/" class="mt-0 btn vastmint-primary-400 vastmint-text-white" style="padding:10px 16px;border-radius:30px">Refresh</>
        </div>
        <% } %> 
      <% }else{ %>
        <div class="vastmint-grid">
            <div class="grid-col-6 grid-col-md-12">
                <img src="<%= response.data.collection.banner_img %>" alt="" class="img-fluid w3-round-large">
            </div>
            <div class="grid-col-6 grid-col-md-12">
                <div class="vastmint-dark w3-card p-2 w3-round-large align-items-start d-flex justify-content-between">
                   <div>
                    <p class="mb-0">
                        <small class="fw-bold">Collection Name</small>
                    </p>
                    <p class="fs-5"><%= response.data.collection.name  %> 
                    <p class="mb-0">
                      <small class="fw-bold">Art works</small>
                    </p>  
                    <p class="fs-5"><%= response.data.collection.arts.length  %> </p>
                    <p class="mb-0">
                        <small class="fw-bold">Total</small>
                      </p>  
                    <p class="fs-5"><%= response.data.collection.total_price %> ETH</p>
                   </div>
                </div> 
            </div>
         </div>
         <div class="vastmint-grid mt-5">
            <% for(art of response.data.collection.arts) { %>
                <div class="grid-col-4 grid-col-md-6 grid-col-sm-12 vastmint-dark w3-round-large">
                    <div class="img-container">
                       <img class="w3-round-large" src="<%= art.nft_img %>" style="height:150px;object-fit:cover;width:100%" alt="">
                    </div>
                    <div class="p-2">
                        <p class="mb-0"><small><%= art.name %></small></p>
                        <p><small class="fw-bold"><%= parseFloat(art.current_price) %>ETH</small></p>
                    </div>
                </div> 
               <% } %>  
           <% for( let index = response.data.collection.arts.length; index < 5; index++ ) { %>
            <div class="grid-col-4 grid-col-md-6 d-flex align-items-center justify-content-center grid-col-sm-12 vastmint-dark w3-round-large">
                <div class="p-3 w3-center">
                    <p><small class="fw-bold">Add an NFT to collection</small></p>
                    <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#staticBackdrop">
                        <i class="bi bi-plus-lg"></i>
                    </button>
                </div>
            </div> 
           <% } %>           
         </div>
      <% } %>
    </section>
  </main>
</body>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js" integrity="sha384-w76AqPfDkMBDXo30jS1Sgez6pr3x5MlQ1ZAGC+nuZB+EYdgRZgiwxhTBTkF7CXvN" crossorigin="anonymous"></script>
<script>
    const useImgFile = ()=>{
        let file = null
        return [
        ()=>file,
        (imgFile)=>{file = imgFile}
        ]
    }
    const useImg = ()=>{
        let img = null
        return [
        ()=>img,
        (imgFile)=>{img = imgFile}
        ]
    }
    const [getImg,setImg] = useImg()
    const [getFile,setFile] = useImgFile()    
    
    const fileInput = document.querySelector("#banner_img")   
    const uploadBtn = document.querySelector("#upload-btn")   
    const closeModalBtn = document.querySelector("#close-modal-btn")   
    const form = document.querySelector("form")  
    fileInput.addEventListener("change",(e)=>{
        const dropZone = document.querySelector("#drop-zone")
        const preview = document.querySelector("#preview-container")
        const errEL= document.querySelector("#file-err")
        const img = preview.querySelector("img")
        // console.log(fileInput)
        const file = e.target.files[0]
        console.log(file)
        if(file.type.startsWith("image/")){
            errEL.classList.add("hide")
            setFile(file)
            const reader = new FileReader();
            img.file = file
            reader.onload = (e) => {
             img.src = e.target.result;
             preview.classList.remove("hide")
             img.classList.remove("d-none")
             dropZone.classList.add("hide")
            };
            reader.readAsDataURL(file);
    
        }else{
           errEL.classList.remove("hide")
           const errText = errEL.querySelector(".error-message")
           errText.innerHTML = "Please select a valid image"
        }
    })
    uploadBtn.addEventListener("click",async(e)=>{
        const loader= document.querySelector("#loader")
        const actions= document.querySelector("#preview-actions")
        const errEL= document.querySelector("#file-err")
    
        const file = getFile()
        const reqData = new FormData()
        reqData.append("file",file)
        reqData.append("user","data")
        try {
            loader.classList.remove("d-none")
            const response = await fetch("/upload/",{
                method:"POST",
                body:reqData
            })
            const data = await response.json()
            loader.classList.add("d-none")

            if(data.status == "success"){
              setImg(data.img_url)
              errEL.classList.add("hide")
              actions.classList.add('d-none')
            }else{
                errEL.classList.remove("hide")
                const errText = errEL.querySelector(".error-message")
                errText.innerHTML = data.err || data.error
            }
        } catch (error) {
            console.log(error)
            loader.classList.add("d-none")
            errEL.classList.remove("hide")
            const errText = errEL.querySelector(".error-message")
            errText.innerHTML = "could not upload due to some server issues please try again later"
        }
    })
    form.addEventListener('submit',async (e)=>{
        e.preventDefault()
        const img = getImg()
        if(img){
            try {
                const formData = e.target
                const reqData = {
                    name:formData["name"].value,
                    price:formData["price"].value,
                    description:formData["description"].value,
                    attributes:[],
                    nft_img:img,
                    collection:'<%= response.data.collection.name %>',
                    collection_id:'<%= response.data.collection.collection_id %>'
                 }
               const loader= document.querySelector("#loader")
               const errEL= document.querySelector("#file-err")
                loader.classList.remove("d-none")
                const res = await fetch(`/api/nft/mint`,{
                    method:"POST",
                    headers: {
                        'Content-Type':'application/json',
                        'Accept':'application/json'
                    },
                    body:JSON.stringify(reqData)
                   })
                
                const resData = await res.json()
                loader.classList.add("d-none")
                console.log(resData)
                if(resData.status == "failed"){
                    loader.classList.add("d-none")
                    errEL.classList.remove("hide")
                    const errText = errEL.querySelector(".error-message")
                    errText.innerHTML = resData.error || reqData.err
                }else{
                    errEL.classList.remove("hide")
                    errEL.classList.add("alert-success")
                    errEL.classList.remove("alert-danger")
                    const errText = errEL.querySelector(".error-message")
                    errText.innerHTML = resData.message 
                    setTimeout(()=>{
                        window.location.reload()
                    },5000)
                }
            } catch (error) {
                console.log(error)
            loader.classList.add("d-none")
            errEL.classList.remove("hide")
            const errText = errEL.querySelector(".error-message")
            errText.innerHTML = "could not upload due to some server issues please try again later"
            }
        }
    })
</script>
</html>